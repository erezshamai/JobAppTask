
pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = 'my-dockerhub-credentials-id' // ID of the credentials you set up in Jenkins
        IMAGE_NAME = 'erezshamai707/my-web-app'
    }

    stages {
        stage('SCM Checkout') {
            steps {
                script {
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/aviram']], 
                        userRemoteConfigs: [[url: 'https://github.com/erezshamai/JobAppTask.git']]])                   
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                
                sh "docker build -t ${IMAGE_NAME}:latest -f docker/web/Dockerfile ."
            }
        }


        stage('Push Docker Image') {
            steps {
                echo 'Logging in to Docker Hub...'
                // This step uses the credentials ID defined in the environment block.
                // It securely provides the username and password to the 'docker login' command.
                withCredentials([usernamePassword(credentialsId: env.DOCKER_HUB_CREDENTIALS, passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin"
                }

                echo 'Pushing Docker image to Docker Hub...'
                // Pushes the image with the 'latest' tag.                
                sh "docker push ${env.IMAGE_NAME}:latest"
                
            }
        }

    }
    // Post-build actions, e.g., cleanup .
    post {
        always {
            echo 'Pipeline finished. Cleaning up workspace...'
            // Clean up the workspace to free up disk space.            
            sh "docker logout"
            cleanWs()
        }
    }        
}

