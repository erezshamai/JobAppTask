// Load Groovy Shared Library
@Library('pipeline-library') _

pipeline {
    agent any

    triggers {
        pollSCM('* * * * *') // Poll every minute (for testing)
    }

    stages {
        stage('SCM Checkout') {
            steps {
                script {
                    def scmVars = checkout([$class: 'GitSCM',
                        branches: [[name: '*/main']], // Change to your branch name
                        userRemoteConfigs: [[url: 'https://github.com/erezshamai/JobAppTask.git']]])
                    prepareEnv(scmVars)
                }
            }
        }

        stage('Build Artifact') {
            steps {
                sh '''
                apt update && apt install -y python3 python3-venv  # Ensure Python3 and venv are installed
                python3 -m venv venv  # Create virtual environment
                if [ ! -d "venv" ]; then echo "Error: venv not created!" && exit 1; fi  # Check if venv was created
                . venv/bin/activate  # Activate virtual environment
                pip install --upgrade pip
                pip install -r requirements.txt
                '''
            }
        }

        stage('Package Artifact') {
            steps {                
                sh 'tar -czf app.tar.gz app/main.py requirements.txt venv' // Package Python app and virtual environment
            }
        }

        stage('Upload to Repository') {
            steps {
                withCredentials([string(credentialsId: 'jenkinsJobAppTask_cred', variable: 'Secret')]) {
                    sh '''
                    git config --global user.email "erezsh12@gmail.com"
                    git config --global user.name "Erez Shamai"
                    # Create a new tag if it doesnâ€™t exist
                    TAG="v1.0.0"
                    git tag -l "$TAG" | grep "$TAG" || git tag -a "$TAG" -m "Automated release $TAG"
                    git push origin "$TAG"

                    # Create GitHub release
                    curl -X POST -H "Authorization: token $TOKEN" \
                    -H "Accept: application/vnd.github.v3+json" \
                    https://github.com/erezshamai/JobAppTask/releases \
                    -d '{
                        "tag_name": "'$TAG'",
                        "name": "'$TAG'",
                        "body": "Automated release by Jenkins",
                        "draft": false,
                        "prerelease": false
                    }'

                    # Upload `app.tar.gz` to the release
                    UPLOAD_URL=$(curl -s -H "Authorization: token $TOKEN" \
                    https://github.com/erezshamai/JobAppTask/releases/latest | \
                    jq -r ".upload_url" | sed "s/{?name,label}//")

                    curl -X POST -H "Authorization: token $TOKEN" \
                    -H "Content-Type: application/octet-stream" \
                    --data-binary @app.tar.gz \
                    "$UPLOAD_URL?name=app.tar.gz"
                    '''
                }
            }
        }
    }
}

