// Load Groovy Shared Library
@Library('pipeline-library') _

pipeline {
    agent any

    triggers {
        pollSCM('* * * * *') // Poll every minute (for testing)
    }

    stages {
        stage('SCM Checkout') {
            steps {
                script {
                    def scmVars = checkout([$class: 'GitSCM',
                        branches: [[name: '*/main']], // Change to your branch name
                        userRemoteConfigs: [[url: 'https://github.com/erezshamai/JobAppTask.git']]])
                    prepareEnv(scmVars)
                }
            }
        }

        stage('Build Artifact') {
            steps {
                sh '''
                apt update && apt install -y python3 python3-venv  # Ensure Python3 and venv are installed
                python3 -m venv venv  # Create virtual environment
                if [ ! -d "venv" ]; then echo "Error: venv not created!" && exit 1; fi  # Check if venv was created
                . venv/bin/activate  # Activate virtual environment
                pip install --upgrade pip
                pip install -r requirements.txt
                '''
            }
        }

        stage('Package Artifact') {
            steps {                
                sh 'tar -czf app.tar.gz app/main.py requirements.txt venv' // Package Python app and virtual environment
            }
        }

        stage('Upload to Repository') {
            steps {
                sh 'curl -u user:password -T app.tar.gz http://your-repo.com/repository/'
            }
        }
    }
}

